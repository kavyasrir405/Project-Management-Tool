{"ast":null,"code":"import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport { includeKeys } from 'filter-obj';\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase()));\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      {\n        return key => (result, value) => {\n          const index = result.length;\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n          if (value === null) {\n            return [...result, [encode(key, options), '[', index, ']'].join('')];\n          }\n          return [...result, [encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')];\n        };\n      }\n    case 'bracket':\n      {\n        return key => (result, value) => {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n          if (value === null) {\n            return [...result, [encode(key, options), '[]'].join('')];\n          }\n          return [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n        };\n      }\n    case 'colon-list-separator':\n      {\n        return key => (result, value) => {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n          if (value === null) {\n            return [...result, [encode(key, options), ':list='].join('')];\n          }\n          return [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n        };\n      }\n    case 'comma':\n    case 'separator':\n    case 'bracket-separator':\n      {\n        const keyValueSeparator = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';\n        return key => (result, value) => {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          // Translate null to an empty string so that it doesn't serialize as 'null'\n          value = value === null ? '' : value;\n          if (result.length === 0) {\n            return [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\n          }\n          return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n        };\n      }\n    default:\n      {\n        return key => (result, value) => {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n          if (value === null) {\n            return [...result, encode(key, options)];\n          }\n          return [...result, [encode(key, options), '=', encode(value, options)].join('')];\n        };\n      }\n  }\n}\nfunction parserForArrayFormat(options) {\n  let result;\n  switch (options.arrayFormat) {\n    case 'index':\n      {\n        return (key, value, accumulator) => {\n          result = /\\[(\\d*)]$/.exec(key);\n          key = key.replace(/\\[\\d*]$/, '');\n          if (!result) {\n            accumulator[key] = value;\n            return;\n          }\n          if (accumulator[key] === undefined) {\n            accumulator[key] = {};\n          }\n          accumulator[key][result[1]] = value;\n        };\n      }\n    case 'bracket':\n      {\n        return (key, value, accumulator) => {\n          result = /(\\[])$/.exec(key);\n          key = key.replace(/\\[]$/, '');\n          if (!result) {\n            accumulator[key] = value;\n            return;\n          }\n          if (accumulator[key] === undefined) {\n            accumulator[key] = [value];\n            return;\n          }\n          accumulator[key] = [...accumulator[key], value];\n        };\n      }\n    case 'colon-list-separator':\n      {\n        return (key, value, accumulator) => {\n          result = /(:list)$/.exec(key);\n          key = key.replace(/:list$/, '');\n          if (!result) {\n            accumulator[key] = value;\n            return;\n          }\n          if (accumulator[key] === undefined) {\n            accumulator[key] = [value];\n            return;\n          }\n          accumulator[key] = [...accumulator[key], value];\n        };\n      }\n    case 'comma':\n    case 'separator':\n      {\n        return (key, value, accumulator) => {\n          const isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n          const isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n          value = isEncodedArray ? decode(value, options) : value;\n          const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n          accumulator[key] = newValue;\n        };\n      }\n    case 'bracket-separator':\n      {\n        return (key, value, accumulator) => {\n          const isArray = /(\\[])$/.test(key);\n          key = key.replace(/\\[]$/, '');\n          if (!isArray) {\n            accumulator[key] = value ? decode(value, options) : value;\n            return;\n          }\n          const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n          if (accumulator[key] === undefined) {\n            accumulator[key] = arrayValue;\n            return;\n          }\n          accumulator[key] = [...accumulator[key], ...arrayValue];\n        };\n      }\n    default:\n      {\n        return (key, value, accumulator) => {\n          if (accumulator[key] === undefined) {\n            accumulator[key] = value;\n            return;\n          }\n          accumulator[key] = [...[accumulator[key]].flat(), value];\n        };\n      }\n  }\n}\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n  return value;\n}\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n  return value;\n}\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort((a, b) => Number(a) - Number(b)).map(key => input[key]);\n  }\n  return input;\n}\nfunction removeHash(input) {\n  const hashStart = input.indexOf('#');\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n  return input;\n}\nfunction getHash(url) {\n  let hash = '';\n  const hashStart = url.indexOf('#');\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n  return hash;\n}\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n  return value;\n}\nexport function extract(input) {\n  input = removeHash(input);\n  const queryStart = input.indexOf('?');\n  if (queryStart === -1) {\n    return '';\n  }\n  return input.slice(queryStart + 1);\n}\nexport function parse(query, options) {\n  options = {\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false,\n    ...options\n  };\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  const formatter = parserForArrayFormat(options);\n\n  // Create an object with no prototype\n  const returnValue = Object.create(null);\n  if (typeof query !== 'string') {\n    return returnValue;\n  }\n  query = query.trim().replace(/^[?#&]/, '');\n  if (!query) {\n    return returnValue;\n  }\n  for (const parameter of query.split('&')) {\n    if (parameter === '') {\n      continue;\n    }\n    const parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\n    let [key, value] = splitOnFirst(parameter_, '=');\n    if (key === undefined) {\n      key = parameter_;\n    }\n\n    // Missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    value = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n    formatter(decode(key, options), value, returnValue);\n  }\n  for (const [key, value] of Object.entries(returnValue)) {\n    if (typeof value === 'object' && value !== null) {\n      for (const [key2, value2] of Object.entries(value)) {\n        value[key2] = parseValue(value2, options);\n      }\n    } else {\n      returnValue[key] = parseValue(value, options);\n    }\n  }\n  if (options.sort === false) {\n    return returnValue;\n  }\n\n  // TODO: Remove the use of `reduce`.\n  // eslint-disable-next-line unicorn/no-array-reduce\n  return (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n    const value = returnValue[key];\n    result[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n    return result;\n  }, Object.create(null));\n}\nexport function stringify(object, options) {\n  if (!object) {\n    return '';\n  }\n  options = {\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    ...options\n  };\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  const shouldFilter = key => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  const formatter = encoderForArrayFormat(options);\n  const objectCopy = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (!shouldFilter(key)) {\n      objectCopy[key] = value;\n    }\n  }\n  const keys = Object.keys(objectCopy);\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n  return keys.map(key => {\n    const value = object[key];\n    if (value === undefined) {\n      return '';\n    }\n    if (value === null) {\n      return encode(key, options);\n    }\n    if (Array.isArray(value)) {\n      if (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n        return encode(key, options) + '[]';\n      }\n      return value.reduce(formatter(key), []).join('&');\n    }\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(x => x.length > 0).join('&');\n}\nexport function parseUrl(url, options) {\n  var _url_$split$, _url_;\n  options = {\n    decode: true,\n    ...options\n  };\n  let [url_, hash] = splitOnFirst(url, '#');\n  if (url_ === undefined) {\n    url_ = url;\n  }\n  return {\n    url: (_url_$split$ = (_url_ = url_) === null || _url_ === void 0 || (_url_ = _url_.split('?')) === null || _url_ === void 0 ? void 0 : _url_[0]) !== null && _url_$split$ !== void 0 ? _url_$split$ : '',\n    query: parse(extract(url), options),\n    ...(options && options.parseFragmentIdentifier && hash ? {\n      fragmentIdentifier: decode(hash, options)\n    } : {})\n  };\n}\nexport function stringifyUrl(object, options) {\n  options = {\n    encode: true,\n    strict: true,\n    [encodeFragmentIdentifier]: true,\n    ...options\n  };\n  const url = removeHash(object.url).split('?')[0] || '';\n  const queryFromUrl = extract(object.url);\n  const query = {\n    ...parse(queryFromUrl, {\n      sort: false\n    }),\n    ...object.query\n  };\n  let queryString = stringify(query, options);\n  queryString && (queryString = \"?\".concat(queryString));\n  let hash = getHash(object.url);\n  if (typeof object.fragmentIdentifier === 'string') {\n    const urlObjectForFragmentEncode = new URL(url);\n    urlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n    hash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : \"#\".concat(object.fragmentIdentifier);\n  }\n  return \"\".concat(url).concat(queryString).concat(hash);\n}\nexport function pick(input, filter, options) {\n  options = {\n    parseFragmentIdentifier: true,\n    [encodeFragmentIdentifier]: false,\n    ...options\n  };\n  const {\n    url,\n    query,\n    fragmentIdentifier\n  } = parseUrl(input, options);\n  return stringifyUrl({\n    url,\n    query: includeKeys(query, filter),\n    fragmentIdentifier\n  }, options);\n}\nexport function exclude(input, filter, options) {\n  const exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n  return pick(input, exclusionFilter, options);\n}","map":{"version":3,"names":["decodeComponent","splitOnFirst","includeKeys","isNullOrUndefined","value","undefined","strictUriEncode","string","encodeURIComponent","replaceAll","x","concat","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","encoderForArrayFormat","options","arrayFormat","key","result","index","length","skipNull","skipEmptyString","encode","join","keyValueSeparator","arrayFormatSeparator","parserForArrayFormat","accumulator","exec","replace","isArray","includes","isEncodedArray","decode","newValue","split","map","item","test","arrayValue","flat","validateArrayFormatSeparator","TypeError","strict","keysSorter","input","Array","sort","Object","keys","a","b","Number","removeHash","hashStart","indexOf","slice","getHash","url","hash","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","formatter","returnValue","create","parameter","parameter_","entries","key2","value2","reduce","Boolean","stringify","object","shouldFilter","objectCopy","filter","parseUrl","_url_$split$","_url_","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","queryString","urlObjectForFragmentEncode","URL","pick","exclude","exclusionFilter"],"sources":["C:/Users/abbav/Documents/mini_project/Salty-project-managment-tool/Project-Management-Tool/frontend/node_modules/query-string/base.js"],"sourcesContent":["import decodeComponent from 'decode-uri-component';\r\nimport splitOnFirst from 'split-on-first';\r\nimport {includeKeys} from 'filter-obj';\r\n\r\nconst isNullOrUndefined = value => value === null || value === undefined;\r\n\r\n// eslint-disable-next-line unicorn/prefer-code-point\r\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\r\n\r\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\r\n\r\nfunction encoderForArrayFormat(options) {\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index': {\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tconst index = result.length;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined\r\n\t\t\t\t\t|| (options.skipNull && value === null)\r\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\r\n\t\t\t\t];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'bracket': {\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined\r\n\t\t\t\t\t|| (options.skipNull && value === null)\r\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...result,\r\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\r\n\t\t\t\t];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'colon-list-separator': {\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined\r\n\t\t\t\t\t|| (options.skipNull && value === null)\r\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...result,\r\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\r\n\t\t\t\t];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\tcase 'bracket-separator': {\r\n\t\t\tconst keyValueSeparator = options.arrayFormat === 'bracket-separator'\r\n\t\t\t\t? '[]='\r\n\t\t\t\t: '=';\r\n\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined\r\n\t\t\t\t\t|| (options.skipNull && value === null)\r\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\r\n\t\t\t\tvalue = value === null ? '' : value;\r\n\r\n\t\t\t\tif (result.length === 0) {\r\n\t\t\t\t\treturn [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined\r\n\t\t\t\t\t|| (options.skipNull && value === null)\r\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...result,\r\n\t\t\t\t\t\tencode(key, options),\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\r\n\t\t\t\t];\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parserForArrayFormat(options) {\r\n\tlet result;\r\n\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index': {\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\r\n\r\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key][result[1]] = value;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'bracket': {\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(\\[])$/.exec(key);\r\n\t\t\t\tkey = key.replace(/\\[]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'colon-list-separator': {\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(:list)$/.exec(key);\r\n\t\t\t\tkey = key.replace(/:list$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator': {\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\r\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\r\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\r\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\r\n\t\t\t\taccumulator[key] = newValue;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase 'bracket-separator': {\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\r\n\t\t\t\tkey = key.replace(/\\[]$/, '');\r\n\r\n\t\t\t\tif (!isArray) {\r\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst arrayValue = value === null\r\n\t\t\t\t\t? []\r\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = arrayValue;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction validateArrayFormatSeparator(value) {\r\n\tif (typeof value !== 'string' || value.length !== 1) {\r\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\r\n\t}\r\n}\r\n\r\nfunction encode(value, options) {\r\n\tif (options.encode) {\r\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction decode(value, options) {\r\n\tif (options.decode) {\r\n\t\treturn decodeComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction keysSorter(input) {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input.sort();\r\n\t}\r\n\r\n\tif (typeof input === 'object') {\r\n\t\treturn keysSorter(Object.keys(input))\r\n\t\t\t.sort((a, b) => Number(a) - Number(b))\r\n\t\t\t.map(key => input[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction removeHash(input) {\r\n\tconst hashStart = input.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\tinput = input.slice(0, hashStart);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction getHash(url) {\r\n\tlet hash = '';\r\n\tconst hashStart = url.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\thash = url.slice(hashStart);\r\n\t}\r\n\r\n\treturn hash;\r\n}\r\n\r\nfunction parseValue(value, options) {\r\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\r\n\t\tvalue = Number(value);\r\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\r\n\t\tvalue = value.toLowerCase() === 'true';\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nexport function extract(input) {\r\n\tinput = removeHash(input);\r\n\tconst queryStart = input.indexOf('?');\r\n\tif (queryStart === -1) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\treturn input.slice(queryStart + 1);\r\n}\r\n\r\nexport function parse(query, options) {\r\n\toptions = {\r\n\t\tdecode: true,\r\n\t\tsort: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ',',\r\n\t\tparseNumbers: false,\r\n\t\tparseBooleans: false,\r\n\t\t...options,\r\n\t};\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst formatter = parserForArrayFormat(options);\r\n\r\n\t// Create an object with no prototype\r\n\tconst returnValue = Object.create(null);\r\n\r\n\tif (typeof query !== 'string') {\r\n\t\treturn returnValue;\r\n\t}\r\n\r\n\tquery = query.trim().replace(/^[?#&]/, '');\r\n\r\n\tif (!query) {\r\n\t\treturn returnValue;\r\n\t}\r\n\r\n\tfor (const parameter of query.split('&')) {\r\n\t\tif (parameter === '') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconst parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\r\n\r\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\r\n\r\n\t\tif (key === undefined) {\r\n\t\t\tkey = parameter_;\r\n\t\t}\r\n\r\n\t\t// Missing `=` should be `null`:\r\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\r\n\t\tformatter(decode(key, options), value, returnValue);\r\n\t}\r\n\r\n\tfor (const [key, value] of Object.entries(returnValue)) {\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\r\n\t\t\t\tvalue[key2] = parseValue(value2, options);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturnValue[key] = parseValue(value, options);\r\n\t\t}\r\n\t}\r\n\r\n\tif (options.sort === false) {\r\n\t\treturn returnValue;\r\n\t}\r\n\r\n\t// TODO: Remove the use of `reduce`.\r\n\t// eslint-disable-next-line unicorn/no-array-reduce\r\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\r\n\t\tconst value = returnValue[key];\r\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\r\n\t\treturn result;\r\n\t}, Object.create(null));\r\n}\r\n\r\nexport function stringify(object, options) {\r\n\tif (!object) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\toptions = {\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ',',\r\n\t\t...options,\r\n\t};\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst shouldFilter = key => (\r\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\r\n\t\t|| (options.skipEmptyString && object[key] === '')\r\n\t);\r\n\r\n\tconst formatter = encoderForArrayFormat(options);\r\n\r\n\tconst objectCopy = {};\r\n\r\n\tfor (const [key, value] of Object.entries(object)) {\r\n\t\tif (!shouldFilter(key)) {\r\n\t\t\tobjectCopy[key] = value;\r\n\t\t}\r\n\t}\r\n\r\n\tconst keys = Object.keys(objectCopy);\r\n\r\n\tif (options.sort !== false) {\r\n\t\tkeys.sort(options.sort);\r\n\t}\r\n\r\n\treturn keys.map(key => {\r\n\t\tconst value = object[key];\r\n\r\n\t\tif (value === undefined) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\treturn encode(key, options);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\r\n\t\t\t\treturn encode(key, options) + '[]';\r\n\t\t\t}\r\n\r\n\t\t\treturn value\r\n\t\t\t\t.reduce(formatter(key), [])\r\n\t\t\t\t.join('&');\r\n\t\t}\r\n\r\n\t\treturn encode(key, options) + '=' + encode(value, options);\r\n\t}).filter(x => x.length > 0).join('&');\r\n}\r\n\r\nexport function parseUrl(url, options) {\r\n\toptions = {\r\n\t\tdecode: true,\r\n\t\t...options,\r\n\t};\r\n\r\n\tlet [url_, hash] = splitOnFirst(url, '#');\r\n\r\n\tif (url_ === undefined) {\r\n\t\turl_ = url;\r\n\t}\r\n\r\n\treturn {\r\n\t\turl: url_?.split('?')?.[0] ?? '',\r\n\t\tquery: parse(extract(url), options),\r\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\r\n\t};\r\n}\r\n\r\nexport function stringifyUrl(object, options) {\r\n\toptions = {\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\t[encodeFragmentIdentifier]: true,\r\n\t\t...options,\r\n\t};\r\n\r\n\tconst url = removeHash(object.url).split('?')[0] || '';\r\n\tconst queryFromUrl = extract(object.url);\r\n\r\n\tconst query = {\r\n\t\t...parse(queryFromUrl, {sort: false}),\r\n\t\t...object.query,\r\n\t};\r\n\r\n\tlet queryString = stringify(query, options);\r\n\tqueryString &&= `?${queryString}`;\r\n\r\n\tlet hash = getHash(object.url);\r\n\tif (typeof object.fragmentIdentifier === 'string') {\r\n\t\tconst urlObjectForFragmentEncode = new URL(url);\r\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\r\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\r\n\t}\r\n\r\n\treturn `${url}${queryString}${hash}`;\r\n}\r\n\r\nexport function pick(input, filter, options) {\r\n\toptions = {\r\n\t\tparseFragmentIdentifier: true,\r\n\t\t[encodeFragmentIdentifier]: false,\r\n\t\t...options,\r\n\t};\r\n\r\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\r\n\r\n\treturn stringifyUrl({\r\n\t\turl,\r\n\t\tquery: includeKeys(query, filter),\r\n\t\tfragmentIdentifier,\r\n\t}, options);\r\n}\r\n\r\nexport function exclude(input, filter, options) {\r\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\r\n\r\n\treturn pick(input, exclusionFilter, options);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}