{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavyasri\\\\OneDrive\\\\Documents\\\\new slaty\\\\frontend\\\\src\\\\containers\\\\Project_list.js\",\n  _s = $RefreshSig$();\n// ProjectList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = ({\n  user\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/djapp/project_list/', {\n          params: {\n            email: user.email\n          }\n        });\n        setProjects(response.data);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team Lead Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.projectid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.projectname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.teamlead_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, project.projectid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectList, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectList;\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\nexport default connect(mapStateToProps)(ProjectList);\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","axios","connect","jsxDEV","_jsxDEV","ProjectList","user","_s","projects","setProjects","fetchProjects","response","get","params","email","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","projectid","projectname","teamlead_email","_c","mapStateToProps","state","auth","$RefreshReg$"],"sources":["C:/Users/Kavyasri/OneDrive/Documents/new slaty/frontend/src/containers/Project_list.js"],"sourcesContent":["// ProjectList.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProjectList = ({ user }) => {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProjects = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/djapp/project_list/', {\r\n                    params: { email: user.email }\r\n                });\r\n                setProjects(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching projects:', error);\r\n            }\r\n        };\r\n\r\n        fetchProjects();\r\n    }, [user]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Project List</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Project ID</th>\r\n                        <th>Project Name</th>\r\n                        <th>Team Lead Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {projects.map(project => (\r\n                        <tr key={project.projectid}>\r\n                            <td>{project.projectid}</td>\r\n                            <td>{project.projectname}</td>\r\n                            <td>{project.teamlead_email}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProjectList);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}