{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { batchedSubscribe } from 'redux-batched-subscribe';\nimport todosReducer from './todos/todosReducer';\nimport visibilityReducer from './visibility/visibilityReducer';\nconst reducer = {\n  todos: todosReducer,\n  visibility: visibilityReducer\n};\nconst preloadedState = {\n  todos: [{\n    text: 'Eat food',\n    completed: true\n  }, {\n    text: 'Exercise',\n    completed: false\n  }],\n  visibilityFilter: 'SHOW_COMPLETED'\n};\nconst debounceNotify = _.debounce(notify => notify());\nconst store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState,\n  enhancers: getDefaultEnhancers => getDefaultEnhancers({\n    autoBatch: false\n  }).concat(batchedSubscribe(debounceNotify))\n});\nexport default store;","map":{"version":3,"names":["configureStore","logger","batchedSubscribe","todosReducer","visibilityReducer","reducer","todos","visibility","preloadedState","text","completed","visibilityFilter","debounceNotify","_","debounce","notify","store","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV","enhancers","getDefaultEnhancers","autoBatch"],"sources":["C:/Users/Kavyasri/OneDrive/Documents/new slaty/frontend/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport { batchedSubscribe } from 'redux-batched-subscribe'\r\nimport todosReducer from './todos/todosReducer'\r\nimport visibilityReducer from './visibility/visibilityReducer'\r\n\r\nconst reducer = {\r\n  todos: todosReducer,\r\n  visibility: visibilityReducer,\r\n}\r\n\r\nconst preloadedState = {\r\n  todos: [\r\n    {\r\n      text: 'Eat food',\r\n      completed: true,\r\n    },\r\n    {\r\n      text: 'Exercise',\r\n      completed: false,\r\n    },\r\n  ],\r\n  visibilityFilter: 'SHOW_COMPLETED',\r\n}\r\n\r\nconst debounceNotify = _.debounce((notify) => notify());\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  preloadedState,\r\n  enhancers: (getDefaultEnhancers) =>\r\n    getDefaultEnhancers({\r\n      autoBatch: false,\r\n    }).concat(batchedSubscribe(debounceNotify)),\r\n})\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,iBAAiB,MAAM,gCAAgC;AAE9D,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAEH,YAAY;EACnBI,UAAU,EAAEH;AACd,CAAC;AAED,MAAMI,cAAc,GAAG;EACrBF,KAAK,EAAE,CACL;IACEG,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAE;EACb,CAAC,EACD;IACED,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAE;EACb,CAAC,CACF;EACDC,gBAAgB,EAAE;AACpB,CAAC;AAED,MAAMC,cAAc,GAAGC,CAAC,CAACC,QAAQ,CAAEC,MAAM,IAAKA,MAAM,CAAC,CAAC,CAAC;AAEvD,MAAMC,KAAK,GAAGhB,cAAc,CAAC;EAC3BK,OAAO;EACPY,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAAClB,MAAM,CAAC;EAC3EmB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAC/Cf,cAAc;EACdgB,SAAS,EAAGC,mBAAmB,IAC7BA,mBAAmB,CAAC;IAClBC,SAAS,EAAE;EACb,CAAC,CAAC,CAACP,MAAM,CAACjB,gBAAgB,CAACU,cAAc,CAAC;AAC9C,CAAC,CAAC;AAEF,eAAeI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}