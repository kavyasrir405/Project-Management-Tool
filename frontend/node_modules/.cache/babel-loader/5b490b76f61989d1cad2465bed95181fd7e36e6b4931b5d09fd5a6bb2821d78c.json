{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abbav\\\\Documents\\\\mini_project\\\\Salty-project-managment-tool\\\\Project-Management-Tool\\\\frontend\\\\src\\\\containers\\\\Resetpasswordconfirm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\nimport { useParams } from 'react-router-dom'; // Import useParams\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordConfirm = ({\n  reset_password_confirm\n}) => {\n  _s();\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    new_password: '',\n    re_new_password: ''\n  });\n  console.log(\"hellloooo\");\n  const {\n    uid,\n    token\n  } = useParams(); // Use useParams to access route parameters\n  console.log(uid, token);\n  const {\n    new_password,\n    re_new_password\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // Log uid and token to verify they are correctly received\n\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSent(true);\n  };\n  if (requestSent) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"New Password\",\n          name: \"new_password\",\n          value: new_password,\n          onChange: e => onChange(e),\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          name: \"re_new_password\",\n          value: re_new_password,\n          onChange: e => onChange(e),\n          minLength: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPasswordConfirm, \"lu+bqrdNok+p88ZG0c/LhiIEA5s=\", false, function () {\n  return [useParams];\n});\n_c = ResetPasswordConfirm;\nexport default connect(null, {\n  reset_password_confirm\n})(ResetPasswordConfirm);\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordConfirm\");","map":{"version":3,"names":["React","useState","Navigate","connect","reset_password_confirm","useParams","jsxDEV","_jsxDEV","ResetPasswordConfirm","_s","requestSent","setRequestSent","formData","setFormData","new_password","re_new_password","console","log","uid","token","onChange","e","target","name","value","onSubmit","preventDefault","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","minLength","required","_c","$RefreshReg$"],"sources":["C:/Users/abbav/Documents/mini_project/Salty-project-managment-tool/Project-Management-Tool/frontend/src/containers/Resetpasswordconfirm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport { useParams } from 'react-router-dom'; // Import useParams\r\n\r\nconst ResetPasswordConfirm = ({ reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n    console.log(\"hellloooo\");\r\n    const { uid, token } = useParams(); // Use useParams to access route parameters\r\n    console.log(uid, token);\r\n    \r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n         // Log uid and token to verify they are correctly received\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Navigate to='/' />;\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}