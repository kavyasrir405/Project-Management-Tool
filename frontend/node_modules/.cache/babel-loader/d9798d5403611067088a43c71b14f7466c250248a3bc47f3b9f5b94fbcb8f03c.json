{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Add_team_members=()=>{const[email,setEmail]=useState('');const[csrfToken,setCsrfToken]=useState('');useEffect(()=>{const fetchCsrfToken=async()=>{try{const response=await axios.get('http://localhost:8000/djapp/csrf-token/');setCsrfToken(response.data.csrfToken);console.log(csrfToken);}catch(error){console.error('Error fetching CSRF token:',error);}};fetchCsrfToken();// Call the fetchCsrfToken function\n},[]);// Empty dependency array ensures this effect runs only once\nconst handleEmailChange=e=>{setEmail(e.target.value);};const handleSubmit=async e=>{e.preventDefault();try{const headers={'X-CSRFToken':csrfToken,'Content-Type':'application/json'};// Make POST request with CSRF token included in headers\nconst response=await axios.post('http://localhost:8000/djapp/generate_invitation_token/',{email:email},{headers});console.log(response.data);setEmail('');}catch(error){console.error('Error sending invitation email:',error);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Enter Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:handleEmailChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send Invitation\"})]});};export default Add_team_members;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Add_team_members","email","setEmail","csrfToken","setCsrfToken","fetchCsrfToken","response","get","data","console","log","error","handleEmailChange","e","target","value","handleSubmit","preventDefault","headers","post","onSubmit","children","htmlFor","type","id","onChange","required"],"sources":["C:/Users/Kavyasri/OneDrive/Documents/new slaty/frontend/src/containers/Add_team_members.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Add_team_members = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\n    useEffect(() => {\r\n       \r\n        const fetchCsrfToken = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/djapp/csrf-token/');\r\n               \r\n                setCsrfToken(response.data.csrfToken);\r\n                console.log(csrfToken)\r\n            } catch (error) {\r\n                console.error('Error fetching CSRF token:', error);\r\n            }\r\n        };\r\n\r\n        fetchCsrfToken(); // Call the fetchCsrfToken function\r\n    }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            \r\n            const headers = {\r\n                'X-CSRFToken': csrfToken,\r\n                'Content-Type': 'application/json',\r\n            };\r\n\r\n            // Make POST request with CSRF token included in headers\r\n            const response = await axios.post('http://localhost:8000/djapp/generate_invitation_token/', { email:email }, { headers });\r\n            console.log(response.data);\r\n          \r\n            setEmail('');\r\n        } catch (error) {\r\n            console.error('Error sending invitation email:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"email\">Enter Email:</label>\r\n            <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n                required\r\n            />\r\n            <button type=\"submit\">Send Invitation</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Add_team_members;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CAEZ,KAAM,CAAAW,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,yCAAyC,CAAC,CAE3EH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACL,SAAS,CAAC,CACrCM,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC,CAC1B,CAAE,MAAOQ,KAAK,CAAE,CACZF,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACtD,CACJ,CAAC,CAEDN,cAAc,CAAC,CAAC,CAAE;AACtB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAO,iBAAiB,CAAIC,CAAC,EAAK,CAC7BX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,CAAC,EAAK,CAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CAEA,KAAM,CAAAC,OAAO,CAAG,CACZ,aAAa,CAAEf,SAAS,CACxB,cAAc,CAAE,kBACpB,CAAC,CAED;AACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACwB,IAAI,CAAC,wDAAwD,CAAE,CAAElB,KAAK,CAACA,KAAM,CAAC,CAAE,CAAEiB,OAAQ,CAAC,CAAC,CACzHT,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC,CAE1BN,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAE,MAAOS,KAAK,CAAE,CACZF,OAAO,CAACE,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CAC3D,CACJ,CAAC,CAED,mBACIZ,KAAA,SAAMqB,QAAQ,CAAEJ,YAAa,CAAAK,QAAA,eACzBxB,IAAA,UAAOyB,OAAO,CAAC,OAAO,CAAAD,QAAA,CAAC,cAAY,CAAO,CAAC,cAC3CxB,IAAA,UACI0B,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVT,KAAK,CAAEd,KAAM,CACbwB,QAAQ,CAAEb,iBAAkB,CAC5Bc,QAAQ,MACX,CAAC,cACF7B,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAC5C,CAAC,CAEf,CAAC,CAED,cAAe,CAAArB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}