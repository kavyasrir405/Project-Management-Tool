{"ast":null,"code":"import { applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; // Import from @reduxjs/toolkit\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware(), thunk],\n  // Add thunk to the middleware array\n  devTools: process.env.NODE_ENV !== 'production' // Only enable Redux DevTools in development\n});\nexport default store;","map":{"version":3,"names":["applyMiddleware","compose","composeWithDevTools","configureStore","getDefaultMiddleware","thunk","rootReducer","initialState","middleware","store","reducer","devTools","process","env","NODE_ENV"],"sources":["C:/Users/Kavyasri/OneDrive/Documents/new slaty/frontend/src/store.js"],"sourcesContent":["import { applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; // Import from @reduxjs/toolkit\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...getDefaultMiddleware(), thunk], // Add thunk to the middleware array\r\n  devTools: process.env.NODE_ENV !== 'production', // Only enable Redux DevTools in development\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB,CAAC,CAAC;AACzE,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,YAAY;AAEpC,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,UAAU,GAAG,CAACH,KAAK,CAAC;AAE1B,MAAMI,KAAK,GAAGN,cAAc,CAAC;EAC3BO,OAAO,EAAEJ,WAAW;EACpBE,UAAU,EAAE,CAAC,GAAGJ,oBAAoB,CAAC,CAAC,EAAEC,KAAK,CAAC;EAAE;EAChDM,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,CAAE;AACnD,CAAC,CAAC;AAEF,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}