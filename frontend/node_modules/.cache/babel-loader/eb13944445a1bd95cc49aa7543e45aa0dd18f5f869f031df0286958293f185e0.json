{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavyasri\\\\OneDrive\\\\Documents\\\\new slaty\\\\frontend\\\\src\\\\containers\\\\Add_team_members.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Add_team_members = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [csrfToken, setCsrfToken] = useState('');\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/djapp/csrf-token/');\n        setCsrfToken(response.data.csrfToken);\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n    fetchCsrfToken(); // Call the fetchCsrfToken function\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Include CSRF token in request headers\n      const headers = {\n        'X-CSRFToken': csrfToken,\n        'Content-Type': 'application/json'\n      };\n\n      // Make POST request with CSRF token included in headers\n      const response = await axios.post('http://localhost:8000/djapp/generate_invitation_token/', {\n        email\n      }, {\n        headers\n      });\n      console.log(response.data);\n      setEmail('');\n    } catch (error) {\n      console.error('Error sending invitation email:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Enter Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: handleEmailChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Invitation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Add_team_members, \"zxHMcuDLap2GaMqQ1RvVYg9wk8Q=\");\n_c = Add_team_members;\nexport default Add_team_members;\nvar _c;\n$RefreshReg$(_c, \"Add_team_members\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Add_team_members","_s","email","setEmail","csrfToken","setCsrfToken","fetchCsrfToken","response","get","data","error","console","handleEmailChange","e","target","value","handleSubmit","preventDefault","headers","post","log","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Kavyasri/OneDrive/Documents/new slaty/frontend/src/containers/Add_team_members.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Add_team_members = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n\r\n    useEffect(() => {\r\n       \r\n        const fetchCsrfToken = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/djapp/csrf-token/');\r\n                setCsrfToken(response.data.csrfToken);\r\n            } catch (error) {\r\n                console.error('Error fetching CSRF token:', error);\r\n            }\r\n        };\r\n\r\n        fetchCsrfToken(); // Call the fetchCsrfToken function\r\n    }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Include CSRF token in request headers\r\n            const headers = {\r\n                'X-CSRFToken': csrfToken,\r\n                'Content-Type': 'application/json',\r\n            };\r\n\r\n            // Make POST request with CSRF token included in headers\r\n            const response = await axios.post('http://localhost:8000/djapp/generate_invitation_token/', { email }, { headers });\r\n            console.log(response.data);\r\n          \r\n            setEmail('');\r\n        } catch (error) {\r\n            console.error('Error sending invitation email:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"email\">Enter Email:</label>\r\n            <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n                required\r\n            />\r\n            <button type=\"submit\">Send Invitation</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Add_team_members;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IAEZ,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,yCAAyC,CAAC;QAC3EH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACL,SAAS,CAAC;MACzC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDJ,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;IAC7BV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACA;MACA,MAAMC,OAAO,GAAG;QACZ,aAAa,EAAEd,SAAS;QACxB,cAAc,EAAE;MACpB,CAAC;;MAED;MACA,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACsB,IAAI,CAAC,wDAAwD,EAAE;QAAEjB;MAAM,CAAC,EAAE;QAAEgB;MAAQ,CAAC,CAAC;MACnHP,OAAO,CAACS,GAAG,CAACb,QAAQ,CAACE,IAAI,CAAC;MAE1BN,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAED,oBACIX,OAAA;IAAMsB,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBACzBvB,OAAA;MAAOwB,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3C5B,OAAA;MACI6B,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,OAAO;MACVd,KAAK,EAAEb,KAAM;MACb4B,QAAQ,EAAElB,iBAAkB;MAC5BmB,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACF5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEf,CAAC;AAAC1B,EAAA,CAtDID,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAwDtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}